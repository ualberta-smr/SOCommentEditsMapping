,PostId,ParentId,PostTypeId,EventId,Event,UserName,CreationDate,Tags,Score,Text
0,24810414,309424,2,76513474,BodyEdit,ymajoros,2014-10-29 09:49:41,,35,"    public static String streamToString(final InputStream inputStream){
        try (final BufferedReader br // buffering optional
              = new BufferedReader(new InputStreamReader(inputStream))){
            return br.lines().parallel().collect(Collectors.joining(""\n""));
                           // parallel optional
        } catch (IOException e) {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
1,24810414,309424,2,76513476,BodyEdit,Khaled.K,2014-10-29 09:49:41,,35,"    public static String streamToString(final InputStream inputStream) throws Exception
    {
        try
        {
            final BufferedReader br // buffering optional
               = new BufferedReader(new InputStreamReader(inputStream)))
        {
            return br.lines().parallel().collect(Collectors.joining(""\n""));
                           // parallel optional
        }
        catch (IOException e)
        {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
2,24810414,309424,2,83070719,BodyEdit,Simon Kuang,2015-02-04 19:35:34,,35,"    public static String streamToString(final InputStream inputStream){
        try (final BufferedReader br // buffering optional
              = new BufferedReader(new InputStreamReader(inputStream))){
            return br.lines().parallel().collect(Collectors.joining(""\n""));
                           // parallel optional
        } catch (Exception e) {
            throw new RuntimeException(e);
            // whatever.
        }
        return null;
        // ^ if bad stuff happens.
    }"
3,24810414,309424,2,83070743,BodyEdit,Simon Kuang,2015-02-04 19:35:59,,35,"    public static String streamToString(final InputStream inputStream){
        try (final BufferedReader br // buffering optional
              = new BufferedReader(new InputStreamReader(inputStream))){
            return br.lines().parallel().collect(Collectors.joining(""\n""));
                           // parallel optional
        } catch (IOException e) {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
4,24810414,309424,2,83114386,BodyEdit,Khaled.K,2015-02-05 10:33:02,,35,"    public static String streamToString(final InputStream inputStream) throws Exception
    {
        try 
        {
            final BufferedReader br // buffering optional
               = new BufferedReader(new InputStreamReader(inputStream)));
            return br.lines().parallel().collect(Collectors.joining(""\n""));
                           // parallel optional
        }
        catch (IOException e)
        {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
5,24810414,309424,2,83149023,BodyEdit,Khaled.K,2015-02-05 18:10:50,,35,"    public static String streamToString(final InputStream inputStream) throws Exception
    {
        try
        (
            final BufferedReader br // buffering optional
               = new BufferedReader(new InputStreamReader(inputStream)));
        )
        {
            return br.lines().parallel().collect(Collectors.joining(""\n""));
                           // parallel optional
        }
        catch (IOException e)
        {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
6,24810414,309424,2,84355191,BodyEdit,Jared Burrows,2015-02-22 23:05:31,,35,"    public static String streamToString(final InputStream inputStream) throws Exception {
        // buffering optional
        try
        (
            final BufferedReader br
               = new BufferedReader(new InputStreamReader(inputStream)));
        ) {
            return br.lines().parallel().collect(Collectors.joining(""\n""));
        // parallel optional
        } catch (final IOException e) {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
7,24810414,309424,2,95139746,BodyEdit,Ian2thedv,2015-07-15 11:03:55,,35,"    public static String streamToString(final InputStream inputStream) throws Exception {
        // buffering optional
        try
        (
            final BufferedReader br
               = new BufferedReader(new InputStreamReader(inputStream))
        ) {
            // parallel optional
            return br.lines().parallel().collect(Collectors.joining(""\n""));
        } catch (final IOException e) {
            throw new RuntimeException(e);
            // whatever.
        }
    }"
